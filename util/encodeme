#!/bin/bash
# Author Marcelo Miranda Carneiro -- mcarneiro@fbiz.com.br | mcarneiro@gmail.com

set -o nounset
set -o errexit
set -o pipefail

ARGS=( "${@:-}" )
DATE=`date`

if [ "${ARGS[0]}" = "?" ]; then
	B1="\033[1m";
	B2="\033[0m";
	echo -e "";
	echo -e "${B1}AUTHOR${B2}";
	echo -e "  Marcelo Miranda Carneiro - mcarneiro@gmail.com";
	echo -e "";
	echo -e "${B1}INFO${B2} (release 2011-01-11)";
	echo -e "  Convert files to a desired encode";
	echo -e "";
	echo -e "${B1}USAGE${B2}";
	echo -e "  encodeme FILE_PATH # convert a file to utf-8.";
	echo -e "  encodeme FILE_PATH [FILE_PATH] ... @convert multiple files to utf-8.";
	echo -e "";
	echo -e "${B1}EXAMPLES${B2}";
	echo -e "  encodeme file.js"
	echo -e "  encodeme *.js"
	echo -e "  encodeme `ls -l *.jsp | awk '{print$(NF)}'`"
	echo -e "";
	exit 1;
fi

verifyFile() {
	if [ ! -f "${1:-}" ]; then
		echo "Não existe ou não é um arquivo: \"${1:-}\""
	fi
	echo "1"
}
backup() {
	zip "encodeme_bkp-$DATE.zip" $1
}
hasEncoding() {
	local HAS_ENCODING=`iconv -l | awk '{print tolower($0)}' | grep "${1:-}"`
	[ "$HAS_ENCODING" != "" ] && echo "1" || echo "0"
}
convert() {
	local FILE=${1:-}
	local TO_ENCODING=${2:-}
	local HASFILE=`verifyFile $FILE`
	local FROM_ENCODING='0'
	
	if [ ! "$TO_ENCODING" ]; then
		TO_ENCODING='utf-8'
	else
		TO_ENCODING=`echo $TO_ENCODING | awk '{print tolower($0)}'`
	fi
	
	echo "---"
	if [ "$HASFILE" = "1" ]; then
		FROM_ENCODING="`file --mime $FILE | awk -F "charset=" '{print tolower($2)}'`"
		if [ "`hasEncoding $FROM_ENCODING`" == "1" ]; then
			if [ "$FROM_ENCODING" != "1" ] && [ "$FROM_ENCODING" != "$TO_ENCODING" ] && [ `hasEncoding $FROM_ENCODING` == "1" ]; then
				echo "backing up $FILE"
				backup $FILE &>/dev/null
				echo "converting $FILE from $FROM_ENCODING to $TO_ENCODING"
				iconv -f "$FROM_ENCODING" -t "$TO_ENCODING" $FILE > "$FILE.utf8"
				mv -f "$FILE.utf8" "$FILE"
			else
				echo "File not converted: $FILE. Reason: Not necessary"
			fi
		else
			echo "File not converted: $FILE. Reason: Encode $FROM_ENCODING doesn't exist on your sytem list "
		fi
	else
		echo "File not found: $FILE"
	fi
}
start() {
	if [ "$(( $#>1 ))" = "1" ]; then
		for(( i=0; i<${#ARGS[@]}; i++ )); do
			convert ${ARGS[i]}
		done
	else
		convert ${ARGS[0]}
	fi
	echo "---"
	echo "done!"
}

start $@